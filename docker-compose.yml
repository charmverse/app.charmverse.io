services:
  defaults:
    image: '310849459438.dkr.ecr.us-east-1.amazonaws.com/${IMGNAME}:${IMGTAG}'
    labels:
      com.datadoghq.ad.logs: '[{"source": "nodejs", "service": "${SERVICE_NAME}", "version": "${IMGTAG}"}]'
      com.datadoghq.tags.env: '${SERVICE_ENV:-tst}'
      com.datadoghq.tags.service: '${SERVICE_NAME}'
      com.datadoghq.tags.version: '${IMGTAG}'
    env_file:
      - '.env'
    environment:
      - NODE_ENV=production
    profiles:
      # services need at least one profile or else they will be started along with what is in COMPOSE_PROFILES env var
      - default_config

  prd-cron:
    extends:
      service: defaults
    ports:
      - '80:3000'
    command: ['npm', 'run', 'cron:prod']
    profiles:
      - prd-cron

  stg-cron:
    extends:
      service: defaults
    ports:
      - '80:3000'
    command: ['npm', 'run', 'cron:staging']
    environment:
      - REACT_APP_APP_ENV=staging
    profiles:
      - stg-cron

  prd-webapp:
    extends:
      service: defaults
    ports:
      - '80:3000'
    command:
      [
        'sh',
        '-c',
        'npm run prisma:deploy && npx react-env --path .env -- node --max-old-space-size=8192 --require dd-trace/init node_modules/.bin/next start --keepAliveTimeout 70000'
      ]
    # environment:
    #   - FORCE_SUBDOMAINS=true
    profiles:
      - prd-webapp

  stg-webapp:
    extends:
      service: defaults
    ports:
      - '80:3000'
    command:
      [
        'sh',
        '-c',
        'npm run prisma:deploy && npx react-env --path .env -- node --max-old-space-size=750 --require dd-trace/init node_modules/.bin/next start --keepAliveTimeout 70000'
      ]
    environment:
      - REACT_APP_APP_ENV=staging
      - PERMISSIONS_API_URL=http://permissions-api:3001
    profiles:
      - stg-webapp

  stg-ceramic:
    extends:
      service: defaults
    command: ['sh', '-c', 'node ./dist/ceramic-client.js']
    ports:
      - '5001:5001'
    profiles:
      - stg-ceramic

  prd-scoutgame:
    extends:
      service: defaults
    ports:
      - '80:3000'
    command:
      [
        'sh',
        '-c',
        'npx react-env --path .env --dest ./apps/scoutgame/public -- node --max-old-space-size=8192 --require dd-trace/init node_modules/.bin/next start apps/scoutgame --keepAliveTimeout 70000'
      ]
    profiles:
      - prd-scoutgame

  stg-scoutgame:
    extends:
      service: defaults
    ports:
      - '80:3000'
    command:
      [
        'sh',
        '-c',
        'npm run prisma:deploy && npx react-env --path .env --dest ./apps/scoutgame/public -- node --max-old-space-size=8192 --require dd-trace/init node_modules/.bin/next start  apps/scoutgame --keepAliveTimeout 70000'
      ]
    environment:
      - REACT_APP_APP_ENV=staging
    profiles:
      - stg-scoutgame

  prd-comingsoon:
    extends:
      service: defaults
    ports:
      - '80:3000'
    command: ['sh', '-c', 'node_modules/.bin/next start apps/comingsoon --keepAliveTimeout 70000']
    profiles:
      - prd-comingsoon

  stg-comingsoon:
    extends:
      service: defaults
    ports:
      - '80:3000'
    command: ['sh', '-c', 'node_modules/.bin/next start apps/comingsoon --keepAliveTimeout 70000']
    environment:
      - REACT_APP_APP_ENV=staging
    profiles:
      - stg-comingsoon

  prd-waitlist:
    extends:
      service: defaults
    ports:
      - '80:3000'
    command:
      [
        'sh',
        '-c',
        'npx react-env --path .env --dest ./apps/waitlist/public -- node --max-old-space-size=8192 --require dd-trace/init node_modules/.bin/next start apps/waitlist --keepAliveTimeout 70000'
      ]
    profiles:
      - prd-waitlist

  stg-waitlist:
    extends:
      service: defaults
    ports:
      - '80:3000'
    command:
      [
        'sh',
        '-c',
        'npm run prisma:deploy && npx react-env --path .env --dest ./apps/waitlist/public -- node --max-old-space-size=8192 --require dd-trace/init node_modules/.bin/next start  apps/waitlist --keepAliveTimeout 70000'
      ]
    environment:
      - REACT_APP_APP_ENV=staging
    profiles:
      - stg-waitlist

  prd-sunnyawards:
    extends:
      service: defaults
    ports:
      - '80:3000'
    command:
      [
        'sh',
        '-c',
        'npx react-env --path .env --dest ./apps/sunnyawards/public -- node --max-old-space-size=8192 --require dd-trace/init node_modules/.bin/next start apps/sunnyawards --keepAliveTimeout 70000'
      ]
    profiles:
      - prd-sunnyawards

  stg-sunnyawards:
    extends:
      service: defaults
    ports:
      - '80:3000'
    command:
      [
        'sh',
        '-c',
        'npm run prisma:deploy && npx react-env --path .env --dest ./apps/sunnyawards/public -- node --max-old-space-size=8192 --require dd-trace/init node_modules/.bin/next start  apps/sunnyawards --keepAliveTimeout 70000'
      ]
    profiles:
      - stg-sunnyawards

  prd-ceramic:
    extends:
      service: defaults
    command: ['sh', '-c', 'node ./dist/ceramic-client.js']
    ports:
      - '5001:5001'
    profiles:
      - prd-ceramic

  prd-sockets:
    extends:
      service: defaults
    ports:
      - '80:3000'
    command: ['sh', '-c', 'node ./dist/initWebsockets.js']
    profiles:
      - prd-sockets

  stg-sockets:
    extends:
      service: defaults
    command: ['sh', '-c', 'node ./dist/initWebsockets.js']
    ports:
      - '3002:3000'
    environment:
      - REACT_APP_APP_ENV=staging
      - PERMISSIONS_API_URL=http://permissions-api:3001
    profiles:
      - stg-sockets
      - stg-webapp

  prd-farcaster:
    extends:
      service: defaults
    ports:
      - '80:3000'
    command:
      [
        'sh',
        '-c',
        'npx react-env --path .env --dest ./apps/farcaster/public -- node --max-old-space-size=8192 --require dd-trace/init node_modules/.bin/next start apps/farcaster --keepAliveTimeout 70000'
      ]
    profiles:
      - prd-farcaster

  stg-farcaster:
    extends:
      service: defaults
    ports:
      - '80:3000'
    command:
      [
        'sh',
        '-c',
        'npx react-env --path .env --dest ./apps/farcaster/public -- node --max-old-space-size=8192 --require dd-trace/init node_modules/.bin/next start apps/farcaster --keepAliveTimeout 70000'
      ]
    profiles:
      - stg-farcaster

  devapp:
    build:
      context: .
    ports:
      - '80:3000'
    command: ['npm', 'start']
    volumes:
      - $PWD:/app
    env_file:
      - '.env'
    depends_on:
      - localpostgres
    profiles:
      - dev

  permissions-api:
    image: '310849459438.dkr.ecr.us-east-1.amazonaws.com/charmverse-permissions-api:${PERMISSION_IMGTAG:-latest}'
    command: ['sh', '-c', 'node --max-old-space-size=750 --experimental-specifier-resolution=node  ./dist/main.js']
    env_file:
      - '.env'
    environment:
      - HOST=permissions-api
    profiles:
      - stg-webapp

  localpostgres:
    image: postgres
    ports:
      - '5432:5432'
    volumes:
      - ${LOCAL_DATA_DIR:-/home/postgresql}:/var/lib/postgresql/
    profiles:
      - dev

  datadog-agent:
    image: public.ecr.aws/datadog/agent
    hostname: datadog-agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/log:/host/var/log:ro
    ports:
      - '8125:8125/udp'
      - '8126:8126/tcp'
    env_file:
      - '.env'
    environment:
      DD_LOGS_ENABLED: 'true'
      DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL: 'true'
      DD_CONTAINER_EXCLUDE: 'image:public.ecr.aws/datadog/agent'
      DD_SITE: 'datadoghq.com'
      DD_APM_ENABLED: 'true'
      DD_APM_NON_LOCAL_TRAFFIC: 'true'
      DD_ENV: '${SERVICE_ENV:-tst}'
      DD_SERVICE: '${SERVICE_NAME}'
      DD_USE_DOGSTATSD: 'true'
      DD_DOGSTATSD_NON_LOCAL_TRAFFIC: 'true'
      DD_EC2_PREFER_IMDSV2: 'true'
    profiles:
      - prd-cron
      - prd-webapp
      - prd-sunnyawards
      - prd-sockets
      - prd-scoutgame
      - prd-waitlist
      - ddtst
