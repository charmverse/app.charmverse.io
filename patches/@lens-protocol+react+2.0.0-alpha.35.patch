diff --git a/node_modules/@lens-protocol/react/dist/declarations/src/transactions/publications/useCreateComment.d.ts b/node_modules/@lens-protocol/react/dist/declarations/src/transactions/publications/useCreateComment.d.ts
index b11be1b..4408aac 100644
--- a/node_modules/@lens-protocol/react/dist/declarations/src/transactions/publications/useCreateComment.d.ts
+++ b/node_modules/@lens-protocol/react/dist/declarations/src/transactions/publications/useCreateComment.d.ts
@@ -4,6 +4,7 @@ import { OpenActionConfig, ReferencePolicyConfig } from '@lens-protocol/domain/u
 import { BroadcastingError } from '@lens-protocol/domain/use-cases/transactions';
 import { UseDeferredTask } from "../../helpers/tasks.js";
 import { AsyncTransactionResult } from "../adapters/AsyncTransactionResult.js";
+import { Session } from '@lens-protocol/react-web';
 /**
  * An object representing the result of a comment creation.
  *
@@ -50,6 +51,8 @@ export type CreateCommentArgs = {
      * otherwise, it will fall back to a signed experience.
      */
     sponsored?: boolean;
+
+    session?: Session
 };
 /**
  * `useCreateComment` is React Hook that allows you to create a new Lens Comment.
diff --git a/node_modules/@lens-protocol/react/dist/declarations/src/transactions/publications/useCreatePost.d.ts b/node_modules/@lens-protocol/react/dist/declarations/src/transactions/publications/useCreatePost.d.ts
index 8960e9e..c65871d 100644
--- a/node_modules/@lens-protocol/react/dist/declarations/src/transactions/publications/useCreatePost.d.ts
+++ b/node_modules/@lens-protocol/react/dist/declarations/src/transactions/publications/useCreatePost.d.ts
@@ -4,6 +4,7 @@ import { OpenActionConfig, ReferencePolicyConfig } from '@lens-protocol/domain/u
 import { BroadcastingError } from '@lens-protocol/domain/use-cases/transactions';
 import { UseDeferredTask } from "../../helpers/tasks.js";
 import { AsyncTransactionResult } from "../adapters/AsyncTransactionResult.js";
+import { Session } from '@lens-protocol/react-web';
 /**
  * An object representing the result of a post creation.
  *
@@ -46,6 +47,8 @@ export type CreatePostArgs = {
      * otherwise, it will fall back to a signed experience.
      */
     sponsored?: boolean;
+
+    session?: Session;
 };
 /**
  * `useCreatePost` is a React Hook that allows you to create a new Lens Post.
diff --git a/node_modules/@lens-protocol/react/dist/lens-protocol-react.esm.js b/node_modules/@lens-protocol/react/dist/lens-protocol-react.esm.js
index a8b5e50..3ec3850 100644
--- a/node_modules/@lens-protocol/react/dist/lens-protocol-react.esm.js
+++ b/node_modules/@lens-protocol/react/dist/lens-protocol-react.esm.js
@@ -11051,14 +11051,13 @@ function useSponsoredConfig() {
  * @group Hooks
  */
 function useCreateComment() {
-  var _useSession = useSession(),
-    session = _useSession.data;
   var createComment = useCreateCommentController();
   var configureRequest = useSponsoredConfig();
   return useDeferredTask( /*#__PURE__*/function () {
     var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(args) {
       var _args$sponsored;
       var request;
+      var session = args.session;
       return _regeneratorRuntime().wrap(function _callee$(_context) {
         while (1) switch (_context.prev = _context.next) {
           case 0:
@@ -12635,14 +12634,13 @@ function useCreatePostRequest() {
  * @group Hooks
  */
 function useCreatePost() {
-  var _useSession = useSession(),
-    session = _useSession.data;
   var createPostRequest = useCreatePostRequest();
   var createPost = useCreatePostController();
   return useDeferredTask( /*#__PURE__*/function () {
     var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(args) {
       var _args$sponsored;
       var request;
+      var session = args.session;
       return _regeneratorRuntime().wrap(function _callee$(_context) {
         while (1) switch (_context.prev = _context.next) {
           case 0:
