{
  "name": "charmverse.io",
  "version": "0.0.0",
  "browserslist": [
    "defaults"
  ],
  "workspaces": [
    "apps/*",
    "packages/*",
    "@connect-shared"
  ],
  "scripts": {
    "script": "npx dotenv -e .env.local -- npx tsx",
    "testgen": "python scripts/testgen/make_tests.py",
    "getcontext": "npx tsx scripts/prompts/traverseAndTokenise.ts",
    "ceramic": "npm start -w apps/ceramic",
    "ceramic:build": "npm run build -w apps/ceramic",
    "build": "npm run webapp:build",
    "webapp:build": "NODE_OPTIONS=\"--max_old_space_size=4096\" npx next build",
    "webapp:build:analyze": "cross-env ANALYZE=true next build --experimental-debug-memory-usage",
    "verifydeps": "npx depcruise --ts-config ./tsconfig.json --config .dependency-cruiser.js -- ./",
    "postdeploy:staging": "node --eval \"console.log('env_url=' + require('./cdk.out.json')['stg-charmverse-${STAGE}'].DeploymentUrl)\"  >> $GITHUB_OUTPUT",
    "destroy:staging": "npx cdk destroy \"stg-charmverse-${STAGE}\" --force",
    "lint": "npx eslint --ext .tsx,.ts",
    "cron": "dotenv -e .env.local -- npm start -w apps/cron",
    "cron:build": "npm run build -w apps/cron",
    "cron:staging": "npm run start:prod -w apps/cron",
    "cron:prod": "npm run start:prod -w apps/cron",
    "cron:test": "dotenv -e .env.test.local -- npm test -w apps/cron",
    "sockets": "PORT=3336 dotenv -e .env.local -- npm run start -w apps/websockets",
    "sockets:build": "npm run build -w apps/websockets",
    "sockets:remote": "dotenv -e .env.production -v PORT=3336 -- npm run start -w apps/websockets",
    "sockets:start:test": "dotenv -e .env.test.local -v PORT=3336 -- npm run start:prod -w apps/websockets",
    "sockets:test": "dotenv -e .env.test.local -- npm test -w apps/websockets",
    "sockets:staging": "PORT=3336 npx dotenv -e .env.staging.local -- tsx watch background/initWebsockets.ts",
    "prisma:link": "rm -rf ./node_modules/.prisma && npm link @charmverse/core && npm run prisma:generate",
    "prisma:migrate": "cd node_modules/@charmverse/core && npm run prisma:migrate",
    "prisma:studio": "cd node_modules/@charmverse/core && npm run prisma:studio",
    "prisma:generate": "cd node_modules/@charmverse/core && npm run prisma:generate",
    "prisma:reset": "cd node_modules/@charmverse/core && npm run prisma:reset",
    "prisma:dev": "cd node_modules/@charmverse/core && npm run prisma:migrate",
    "prisma:deploy": "cd node_modules/@charmverse/core && npm run prisma:deploy",
    "debug:e2e": "npx dotenv -e .env.test.local -- npx playwright test --headed --timeout=0",
    "postinstall": "npx patch-package && cd node_modules/@charmverse/core && npm run postinstall",
    "migrate:test": "dotenv -e .env.test.local -- npx prisma migrate deploy",
    "notifications:debug": "ts-node --transpileOnly ./scripts/readNotifications.ts",
    "server:dev": "NODE_OPTIONS=\"--max_old_space_size=8192\" npx react-env --path .env.local -- next dev",
    "server:remote": "NODE_OPTIONS=\"--max_old_space_size=8192\" npx react-env --path .env.production -- next dev",
    "server:staging": "NODE_OPTIONS=\"--max_old_space_size=8192\" npx react-env --path .env.staging.local -- next dev",
    "server:test": "npx react-env --path .env.test.local -- next dev",
    "server:test:ci": "NODE_OPTIONS=\"--max_old_space_size=4096\" npx react-env --path .env.test.local -- npx next start",
    "start": "concurrently --names \"next,sockets\" -c \"green,yellow\" \"REACT_APP_WEBSOCKETS_HOST=http://127.0.0.1:3336 npm run server:dev\" \"npm run sockets\"",
    "start:debug": "cross-env NODE_OPTIONS='--inspect' next",
    "start:ssl": "(npx local-ssl-proxy --source 3000 --target 8080) & next dev --port 8080",
    "start:ssl:prod": "(npx local-ssl-proxy --source 3000 --target 8080) & next start --port 8080",
    "start:test": "concurrently --names \"next,sockets\" -c \"green,yellow\" \"npm run server:test\" \"npm run sockets:start:test\"",
    "start:test:ci": "DISABLE_PUBLISHED_CREDENTIALS=\"true\"  concurrently --names \"next,sockets\" -c \"green,yellow\" \"npm run server:test:ci\" \"npm run sockets:start:test\"",
    "start:remote": "concurrently --names \"next,sockets\" -c \"green,yellow\" \"npm run server:remote\" \"npm run sockets:remote\"",
    "start:staging": "concurrently --names \"next,sockets\" -c \"green,yellow\" \"REACT_APP_WEBSOCKETS_HOST=http://127.0.0.1:3336 npm run server:staging\" \"npm run sockets:staging\"",
    "prepare": "husky install",
    "db-tool": "npx prisma studio --schema=node_modules/@charmverse/core/src/prisma/schema.prisma",
    "db-tool:dev": "dotenv -e .env.local -- npx prisma studio --schema=node_modules/@charmverse/core/src/prisma/schema.prisma",
    "db-tool:test": "dotenv -e .env.test.local -- npx prisma studio --schema=node_modules/@charmverse/core/src/prisma/schema.prisma",
    "serverless:build": "dotenv -e .env.local -- npx serverless package",
    "serverless:start": "dotenv -e .env.test.local -- serverless offline start --httpPort=3020",
    "typecheck": "NODE_OPTIONS=\"--max_old_space_size=4096\" node_modules/typescript/bin/tsc --project tsconfig.json --noEmit",
    "test:setup-db": "./scripts/configure-db.sh",
    "test:browser": "TZ=UTC jest --config='./components/jest.config.ts' && TZ=UTC jest --config='./hooks/jest.config.ts'",
    "test:browser:update": "TZ=UTC jest --config='./components/jest.config.ts' -u  && TZ=UTC jest --config='./hooks/jest.config.ts' -u",
    "test:e2e": "npx dotenv -e .env.test.local -- npx playwright test --timeout=0",
    "test:e2e:ci": "NODE_OPTIONS=\"--max_old_space_size=4096\" dotenv -e .env.test.local -- npx playwright test",
    "test": "npm run test:ci -- --verbose --watch --config='./lib/jest.config.ts'",
    "test:ci": "NODE_OPTIONS=\"--max_old_space_size=4096\" dotenv -e .env.test.local --override -- node --experimental-vm-modules ./node_modules/.bin/jest --maxWorkers=2",
    "test:debug": "dotenv -e .env.test.local --override -- node --inspect-brk --expose-gc ./node_modules/.bin/jest --runInBand --logHeapUsage --config='./__integration-tests__/jest.config.ts' --verbose",
    "test:server": "npm run test:server:ci -- --verbose --watch",
    "test:server:ci": "NODE_OPTIONS=\"--max_old_space_size=4096\" dotenv -e .env.test.local --override -- npx jest --config='./__integration-tests__/jest.config.ts' --maxWorkers=2",
    "test:serverless": "dotenv -e .env.test.local -- npx jest --config='./__serverless-tests__/jest.config.ts'",
    "storybook": "npx storybook dev -p 6006",
    "update-core": "npm install @charmverse/core",
    "build:storybook": "npx storybook build",
    "upgrade:storybook": "npx storybook@latest upgrade",
    "chromatic:ci": "chromatic --only-changed --exit-zero-on-changes",
    "scoutgame": "npx react-env --path .env.local --dest ./apps/scoutgame/public -- npm run start --workspace=apps/scoutgame",
    "scoutgame:remote": "npx react-env --path .env.production --dest ./apps/scoutgame/public -- npm run start --workspace=apps/scoutgame",
    "scoutgame:build": "npm run build --w=apps/scoutgame",
    "scoutgame:start:prod": "npx react-env --path .env.local --dest ./apps/scoutgame/public -- npm run start:prod --workspace=apps/scoutgame",
    "scoutgame:test": "dotenv -e .env.test.local -- npm test -w apps/scoutgame",
    "scoutgame:e2e": "npx dotenv -e .env.test.local -- npm run test:e2e -w=apps/scoutgame -- --headed",
    "scoutgame:e2e:ci": "npx dotenv -e .env.test.local -- npm run test:e2e -w=apps/scoutgame",
    "scoutgame:start:test": "npm run start:test -w=apps/scoutgame",
    "scoutgame:start:test:ci": "npm run start:test:ci -w=apps/scoutgame",
    "scoutgame:seed": "dotenv -e .env.local -- npm run seed -w apps/scoutgamecron",
    "scoutgamecron": "dotenv -e .env.test.local -- npm start -w apps/scoutgamecron",
    "scoutgamecron:test": "dotenv -e .env.test.local -- npm test -w apps/scoutgamecron",
    "scoutgamecron:staging": "npm run start:prod:node18 -w apps/scoutgamecron",
    "scoutgamecron:prod": "npm run start:prod:node18 -w apps/scoutgamecron",
    "scoutgametelegram": "npx react-env --path .env.local --dest ./apps/scoutgametelegram/public -- npm run start --workspace=apps/scoutgametelegram",
    "scoutgametelegram:remote": "npx react-env --path .env.production --dest ./apps/scoutgametelegram/public -- npm run start --workspace=apps/scoutgametelegram",
    "scoutgametelegram:build": "npm run build --w=apps/scoutgametelegram",
    "scoutgametelegram:start:prod": "npx react-env --path .env.local --dest ./apps/scoutgametelegram/public -- npm run start:prod --workspace=apps/scoutgametelegram",
    "scoutgametelegram:test": "dotenv -e .env.test.local -- npm test -w apps/scoutgametelegram",
    "scoutgametelegram:e2e": "npx dotenv -e .env.test.local -- npm run test:e2e -w=apps/scoutgametelegram -- --headed",
    "scoutgametelegram:e2e:ci": "npx dotenv -e .env.test.local -- npm run test:e2e -w=apps/scoutgametelegram",
    "scoutgametelegram:start:test": "npm run start:test -w=apps/scoutgametelegram",
    "scoutgametelegram:start:test:ci": "npm run start:test:ci -w=apps/scoutgametelegram",
    "waitlist": "npx react-env --path .env.local --dest ./apps/waitlist/public -- npm run start --workspace=apps/waitlist",
    "waitlist:start:test": "npm run start:test -w=apps/waitlist",
    "waitlist:remote": "npx react-env --path .env.production -- npm run start --workspace=apps/waitlist",
    "waitlist:build": "npm run build --w=apps/waitlist",
    "waitlist:start:prod": "npx react-env --path .env.local --dest ./apps/waitlist/public -- npm run start:prod --workspace=apps/waitlist",
    "waitlist:debug:e2e": "npm run debug:e2e -w=apps/waitlist",
    "waitlist:test:e2e:ci": "npm run test:e2e:ci -w=apps/waitlist",
    "waitlist:start:test:ci": "npm run start:test:ci -w=apps/waitlist",
    "farcaster": "npx react-env --path .env.local --dest ./apps/farcaster/public -- npm run start --workspace=apps/farcaster",
    "farcaster:staging": "npx react-env --path .env.staging.local --dest ./apps/farcaster/public -- npm run start --workspace=apps/farcaster",
    "farcaster:remote": "dotenv -e .env.production -- npm run start --w=apps/farcaster",
    "farcaster:lint": "npx eslint --ext .tsx,.ts",
    "farcaster:build": "npm run build --w=apps/farcaster",
    "farcaster:start:prod": "npm run start:prod --workspace=apps/farcaster",
    "sunnyawards": "npx react-env --path .env.local --dest ./apps/sunnyawards/public -- npm run start --workspace=apps/sunnyawards",
    "sunnyawards:remote": "dotenv -e .env.production -- npm run start --w=apps/sunnyawards",
    "sunnyawards:build": "npm run build --w=apps/sunnyawards",
    "sunnyawards:start:prod": "npm run start:prod --workspace=apps/sunnyawards",
    "sunnyawards:start:test": "npm run start:test -w=apps/sunnyawards",
    "sunnyawards:start:test:ci": "npm run start:test:ci -w=apps/sunnyawards",
    "sunnyawards:debug:e2e": "npm run debug:e2e -w=apps/sunnyawards",
    "sunnyawards:test:e2e:ci": "npm run test:e2e:ci -w=apps/sunnyawards",
    "scoutgameadmin": "dotenv -e .env.local -- npm start -w=apps/scoutgameadmin",
    "scoutgameadmin:remote": "dotenv -e .env.production -- npm start -w=apps/scoutgameadmin",
    "scoutgameadmin:build": "npm run build -w=apps/scoutgameadmin"
  },
  "lint-staged": {
    "*.{ts,tsx}": [
      "eslint --fix"
    ]
  },
  "dependencies": {
    "@airstack/frames": "^1.2.0",
    "@ankr.com/ankr.js": "^0.5.0",
    "@apollo/client": "^3.8.8",
    "@aws-sdk/client-acm": "^3.624.0",
    "@aws-sdk/client-elastic-load-balancing-v2": "^3.624.0",
    "@aws-sdk/client-s3": "^3.624.0",
    "@aws-sdk/client-sqs": "^3.624.0",
    "@aws-sdk/client-sts": "^3.624.0",
    "@aws-sdk/lib-storage": "^3.624.0",
    "@aws-sdk/xhr-http-handler": "^3.620.0",
    "@bangle.dev/base-components": "^0.31.6",
    "@bangle.dev/pm": "^0.31.6",
    "@bangle.dev/pm-commands": "^0.31.6",
    "@bangle.dev/utils": "^0.31.6",
    "@beam-australia/react-env": "^3.1.1",
    "@charmverse/core": "0.93.2-rc-feat-sg-telegra.1",
    "@column-resizer/core": "^1.0.2",
    "@datadog/browser-logs": "^4.42.2",
    "@datadog/browser-rum": "^4.42.2",
    "@decent.xyz/the-box": "^3.1.15",
    "@delegatexyz/sdk": "^0.5.2",
    "@emotion/babel-preset-css-prop": "^11.12.0",
    "@emotion/cache": "^11.13.1",
    "@emotion/react": "^11.13.3",
    "@emotion/server": "^11.11.0",
    "@emotion/styled": "^11.13.0",
    "@ethereum-attestation-service/eas-sdk": "^0.29.1",
    "@ethersproject/abi": "^5.7.0",
    "@ethersproject/bignumber": "^5.5.0",
    "@ethersproject/contracts": "^5.7.0",
    "@ethersproject/providers": "^5.5.3",
    "@ethersproject/wallet": "^5.7.0",
    "@farcaster/auth-client": "^0.3.0",
    "@farcaster/auth-kit": "^0.6.0",
    "@farcaster/core": "^0.13.7",
    "@fontsource/ia-writer-mono": "^4.5.3",
    "@fullcalendar/common": "^5.11.5",
    "@fullcalendar/core": "^6.1.9",
    "@fullcalendar/daygrid": "^6.1.9",
    "@fullcalendar/interaction": "^6.1.9",
    "@fullcalendar/react": "^6.1.9",
    "@googleapis/drive": "^4.0.1",
    "@googleapis/forms": "^2.0.0",
    "@guildxyz/sdk": "^2.4.0",
    "@hookform/resolvers": "^2.8.8",
    "@koa/cors": "^5.0.0",
    "@koa/router": "^10.1.1",
    "@lens-protocol/client": "^2.0.0-alpha.27",
    "@lens-protocol/metadata": "^1.2.0",
    "@lens-protocol/react-web": "^2.0.0-alpha.27",
    "@lens-protocol/wagmi": "^4.1.4",
    "@metamask/onboarding": "^1.0.1",
    "@mui/icons-material": "^6.1.4",
    "@mui/material": "^6.1.4",
    "@mui/material-nextjs": "^6.1.4",
    "@mui/system": "^6.1.4",
    "@mui/x-date-pickers": "^7.20.0",
    "@mui/x-tree-view": "^7.20.0",
    "@mux/mux-node": "^8.0.0",
    "@mux/mux-video-react": "^0.7.15",
    "@mux/upchunk": "^3.0.0",
    "@noble/ed25519": "^2.0.0",
    "@notionhq/client": "^2.2.15",
    "@octokit/auth-app": "^6.1.1",
    "@octokit/auth-oauth-app": "^8.1.0",
    "@octokit/rest": "^21.0.2",
    "@popperjs/core": "^2.11.8",
    "@react-dnd/shallowequal": "^4.0.0",
    "@react-email/column": "^0.0.12",
    "@react-email/container": "^0.0.14",
    "@react-email/head": "^0.0.11",
    "@react-email/hr": "^0.0.10",
    "@react-email/html": "^0.0.10",
    "@react-email/img": "^0.0.10",
    "@react-email/link": "^0.0.10",
    "@react-email/preview": "^0.0.11",
    "@react-email/render": "^1.0.1",
    "@react-email/row": "^0.0.10",
    "@react-email/section": "^0.0.14",
    "@react-email/text": "^0.0.10",
    "@reduxjs/toolkit": "^2.2.7",
    "@reservoir0x/reservoir-sdk": "^2.0.9",
    "@safe-global/api-kit": "^2.4.1",
    "@safe-global/safe-core-sdk": "^3.3.4",
    "@safe-global/safe-core-sdk-types": "^2.2.0",
    "@safe-global/safe-ethers-lib": "^1.9.4",
    "@safe-global/safe-service-client": "^2.0.2",
    "@snapshot-labs/snapshot.js": "^0.4.60",
    "@socket.io/postgres-adapter": "^0.3.1",
    "@socket.io/redis-adapter": "^8.2.1",
    "@storybook/icons": "^1.2.9",
    "@storybook/test": "^8.0.9",
    "@stripe/react-stripe-js": "^2.1.1",
    "@stripe/stripe-js": "^1.54.1",
    "@synaps-io/verify-sdk": "^4.0.45",
    "@tanstack/react-query": "^5.59.14",
    "@typeform/api-client": "^2.3.1",
    "@uauth/js": "^2.4.0",
    "@wagmi/connectors": "^5.1.10",
    "@wagmi/core": "^2.13.3",
    "@zoralabs/zdk": "^2.4.0",
    "apg-js": "^4.4.0",
    "async-sema": "^3.1.1",
    "autosuggest-highlight": "^3.3.0",
    "aws-cdk-lib": "^2.151.0",
    "bcrypt": "^5.1.1",
    "clsx": "^1.1.1",
    "color": "^4.2.0",
    "cookies": "^0.8.0",
    "cryptr": "^6.1.0",
    "csv": "^6.3.3",
    "dd-trace": "^5.22.0",
    "diff": "^5.1.0",
    "emoji-mart": "^3.0.1",
    "ethers": "^5.7.2",
    "firebase": "^10.13.0",
    "firebase-admin": "^12.3.0",
    "form-data": "^4.0.0",
    "formidable": "^3.5.0",
    "frames.js": "^0.18.1",
    "gaxios": "^5.0.2",
    "google-auth-library": "^8.7.0",
    "graphql": "^16.8.1",
    "hot-shots": "^9.0.0",
    "html-to-text": "^8.2.0",
    "iconv-lite": "^0.6.3",
    "immutable": "^4.0.0",
    "install": "^0.13.0",
    "iron-session": "^8.0.1",
    "jose": "^4.15.5",
    "jszip": "^3.10.1",
    "koa": "^2.15.3",
    "koa-router": "^12.0.1",
    "lodash": "^4.17.21",
    "lodash-es": "^4.17.21",
    "luxon": "^3.4.4",
    "mailgun.js": "^10.2.1",
    "markdown-it": "^13.0.1",
    "marked": "^4.0.12",
    "material-ui-popup-state": "^5.3.1",
    "millify": "^4.0.0",
    "mixpanel": "^0.17.0",
    "msw-storybook-addon": "^2.0.0",
    "nanoid": "^3.3.6",
    "nanoid-dictionary": "^3.0.0",
    "next": "^14.2.15",
    "next-bundle-analyzer": "^0.6.8",
    "next-connect": "^0.13.0",
    "next-swagger-doc": "^0.3.6",
    "npm": "^10.8.3",
    "otpauth": "^9.2.1",
    "papaparse": "^5.3.2",
    "persona": "^4.13.0",
    "pg": "^8.11.3",
    "promise-retry": "^2.0.1",
    "prosemirror-changeset": "^2.2.1",
    "prosemirror-collab": "^1.3.1",
    "prosemirror-commands": "^1.6.0",
    "prosemirror-dropcursor": "^1.8.1",
    "prosemirror-example-setup": "^1.2.1",
    "prosemirror-gapcursor": "^1.3.2",
    "prosemirror-history": "^1.4.1",
    "prosemirror-inputrules": "^1.4.0",
    "prosemirror-keymap": "^1.2.2",
    "prosemirror-markdown": "^1.13.0",
    "prosemirror-menu": "^1.2.4",
    "prosemirror-model": "^1.22.3",
    "prosemirror-schema-list": "^1.4.1",
    "prosemirror-state": "^1.4.3",
    "prosemirror-tables": "^1.5.0",
    "prosemirror-test-builder": "^1.1.1",
    "prosemirror-trailing-node": "^3.0.0",
    "prosemirror-transform": "^1.10.0",
    "prosemirror-utils": "^1.2.2",
    "prosemirror-view": "^1.34.1",
    "qrcode": "^1.5.3",
    "react": "^18.3.1",
    "react-countdown": "^2.3.2",
    "react-csv": "^2.2.2",
    "react-dnd": "^16.0.0",
    "react-dnd-html5-backend": "^16.0.0",
    "react-dnd-multi-backend": "^8.0.0",
    "react-dnd-touch-backend": "^16.0.0",
    "react-dom": "^18.3.1",
    "react-email": "^3.0.1",
    "react-hook-form": "^7.25.0",
    "react-hot-keys": "^2.7.1",
    "react-hotkeys-hook": "^3.4.4",
    "react-icons": "^5.3.0",
    "react-iframe": "^1.8.5",
    "react-intl": "^6.5.1",
    "react-pdf": "^9.0.0",
    "react-resizable": "^3.0.5",
    "react-to-print": "^2.15.1",
    "react-window": "^1.8.7",
    "redis": "^4.3.1",
    "rfc6902": "^5.0.1",
    "scroll-into-view-if-needed": "^2.2.29",
    "serverless": "^4.1.19",
    "sharp": "^0.33.4",
    "siwe": "^2.1.4",
    "socket.io": "^4.7.5",
    "socket.io-client": "^4.7.5",
    "stripe": "^12.14.0",
    "swagger-ui-react": "^5.17.14",
    "swr": "^2.2.5",
    "tiktoken": "^1.0.15",
    "tsconfig-paths": "^4.2.0",
    "tsx": "^4.7.0",
    "turndown": "^7.1.2",
    "twemoji": "^14.0.1",
    "uint8arrays": "^5.0.1",
    "undici": "^6.19.5",
    "unique-names-generator": "^4.7.1",
    "usehooks-ts": "^2.14.0",
    "uuid": "^8.3.2",
    "viem": "^2.21.26",
    "wagmi": "^2.12.17",
    "yup": "^1.4.0",
    "zksync-web3": "^0.16.0"
  },
  "devDependencies": {
    "@depay/web3-mock": "^13.18.1",
    "@graphql-codegen/typescript-react-apollo": "^4.1.0",
    "@jest/globals": "^29.7.0",
    "@next/eslint-plugin-next": "^14.2.15",
    "@playwright/test": "^1.47.1",
    "@spruceid/siwe-parser": "^2.0.2",
    "@storybook/addon-essentials": "^8.3.5",
    "@storybook/addon-interactions": "^8.0.9",
    "@storybook/addon-links": "^8.0.9",
    "@storybook/blocks": "^8.3.5",
    "@storybook/manager-api": "^8.0.9",
    "@storybook/nextjs": "^8.3.0",
    "@storybook/react": "^8.0.9",
    "@storybook/theming": "^8.0.9",
    "@stylistic/eslint-plugin-ts": "^2.9.0",
    "@svgdotjs/svg.js": "^3.2.0",
    "@svgr/webpack": "^8.0.1",
    "@swc/jest": "^0.2.36",
    "@testing-library/jest-dom": "^6.1.4",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^13.5.0",
    "@types/autosuggest-highlight": "^3.2.0",
    "@types/aws-lambda": "^8.10.109",
    "@types/bcrypt": "^5.0.2",
    "@types/color": "^3.0.6",
    "@types/cookies": "^0.7.8",
    "@types/cryptr": "^4.0.1",
    "@types/diff": "^5.0.2",
    "@types/emoji-js": "^3.5.0",
    "@types/emoji-mart": "^3.0.9",
    "@types/formidable": "^3.4.0",
    "@types/google.accounts": "^0.0.4",
    "@types/html-to-text": "^8.1.0",
    "@types/jest": "^29.5",
    "@types/koa": "^2.15.0",
    "@types/koa__cors": "^5.0.0",
    "@types/koa__router": "^8.0.11",
    "@types/koa-router": "^7.4.8",
    "@types/lodash-es": "^4.17.12",
    "@types/luxon": "^2.0.9",
    "@types/markdown-it": "^12.2.3",
    "@types/marked": "^4.0.2",
    "@types/nanoid-dictionary": "^4.2.3",
    "@types/node": "^20.6.3",
    "@types/papaparse": "^5.3.5",
    "@types/promise-retry": "^1.1.3",
    "@types/qrcode": "^1.5.5",
    "@types/react": "^18.3.11",
    "@types/react-copy-to-clipboard": "^5.0.4",
    "@types/react-csv": "^1.1.2",
    "@types/react-dom": "^18.3.1",
    "@types/react-pdf": "^7.0.0",
    "@types/react-resizable": "^1.7.4",
    "@types/react-window": "^1.8.7",
    "@types/redux-mock-store": "^1.0.6",
    "@types/supertest": "^2.0.12",
    "@types/swagger-ui-react": "^4.1.1",
    "@types/turndown": "^5.0.2",
    "@types/uuid": "^9.0.4",
    "@typescript-eslint/parser": "^8.9.0",
    "aws-cdk": "^2.151.0",
    "chromatic": "^6.21.0",
    "concurrently": "^8.2.1",
    "cookie": "^0.7.0",
    "cross-env": "^7.0.3",
    "dependency-cruiser": "^13.1.5",
    "dotenv": "^16.3.1",
    "dotenv-cli": "^7.3.0",
    "emoji-js": "^3.7.0",
    "esbuild": "^0.19.5",
    "eslint": "^8.57.1",
    "eslint-config-airbnb": "^19.0.4",
    "eslint-config-next": "^14.2.15",
    "eslint-config-prettier": "^9.1.0",
    "eslint-import-resolver-typescript": "^3.6.3",
    "eslint-plugin-jsx-a11y": "^6.10.0",
    "eslint-plugin-prettier": "^5.2.1",
    "eslint-plugin-react": "^7.37.1",
    "eslint-plugin-react-hooks": "^4.6.2",
    "eslint-plugin-storybook": "^0.9.0",
    "fetch-mock-jest": "^1.5.1",
    "graphql-schema-typescript": "^1.6.1",
    "husky": "^7.0.0",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "lint-staged": "^12.3.2",
    "msw": "^2.2.14",
    "node-mocks-http": "^1.14.1",
    "patch-package": "^8.0.0",
    "pino-pretty": "^11.2.2",
    "playwright": "^1.47.1",
    "prettier": "^3.3.3",
    "react-copy-to-clipboard": "^5.1.0",
    "react-redux": "^9.1.2",
    "redux-mock-store": "^1.5.4",
    "sass": "^1.49.0",
    "serverless-esbuild": "^1.48.5",
    "serverless-lift": "^1.29.0",
    "serverless-offline": "^14.0.0",
    "serverless-scriptable-plugin": "^1.3.1",
    "storybook": "^8.3.0",
    "supertest": "^6.3.3",
    "svgdom": "^0.1.16",
    "ts-node": "^10.9.1",
    "tsc-alias": "^1.8.6",
    "tslib": "^2.6.2",
    "typescript": "^5.4.2",
    "webpack": "^5.94.0"
  },
  "overrides": {
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "typescript": "^5.4.2",
    "esbuild": "^0.19.5",
    "serverless": "^4.1.19",
    "viem": "^2.21.26"
  },
  "msw": {
    "workerDirectory": "public"
  }
}