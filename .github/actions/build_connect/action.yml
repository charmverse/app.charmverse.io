name: 'Build application'

inputs:
  REACT_APP_APP_ENV:
    description: '...'
    required: false
  save_cache:
    description: 'Whether to save the cache'
    required: false

runs:
  using: 'composite'
  steps:
    # - name: Show GitHub context
    #   shell: bash
    #   env:
    #     GITHUB_CONTEXT: ${{ toJson(github) }}
    #   run: echo "$GITHUB_CONTEXT"

    - name: Restore build
      id: restore_build
      uses: actions/cache/restore@v4
      with:
        path: |
          apps/connect/.next
          apps/connect-api/dist
          .env.test.local
        # including the app_env helps make sure that deploy_staging.yml does not reuse values from test_and_deploy.yml which are meant for production
        key: nextjs-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx', '**/*.gql', '**/*.scss', '!node_modules', '!.next', '!dist', '!apps/connect/.next', '!apps/connect-api/dist',  '!dont_cache') }}

    - name: Build
      shell: bash
      if: steps.restore_build.outputs.cache-hit != 'true'
      # env:
      #   NEXT_PUBLIC_CONNECT_API_HOST: 'https://localhost:3333'
      run: npm run connect:all:build

    # building cache key takes almost a minute, so we only run this if we are saving the cache
    - name: Cache build
      if: inputs.save_cache
      uses: actions/cache/save@v4
      with:
        path: |
          apps/connect/.next
          apps/connect-api/dist
          .env.test.local
        # including the app_env helps make sure that deploy_staging.yml does not reuse values from test_and_deploy.yml which are meant for production
        key: nextjs-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx', '**/*.gql', '**/*.scss', '!node_modules', '!.next', '!dist', '!apps/connect/.next', '!apps/connect-api/dist', '!dont_cache') }}
