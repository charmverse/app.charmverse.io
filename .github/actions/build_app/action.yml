name: 'Build app'

inputs:
  app_name:
    description: The name of the app'
    required: true

runs:
  using: 'composite'
  steps:

    - name: Restore build
      id: restore_build
      uses: actions/cache@v4
      with:
        # include the public folder in case the build output puts something there (like sw.js)
        path: |
          apps/${{ inputs.app_name }}/.next/cache
          apps/${{ inputs.app_name }}/public
        # Generate a new cache whenever packages or source files change.
        key: app-${{ inputs.app_name }}-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('lib/**/*.ts', 'lib/**/*.tsx', '@connect-shared/**/*.ts', '@connect-shared/**/*.tsx', format('apps/{0}/**/*.ts', inputs.app_name), format('apps/{0}/**/*.tsx', inputs.app_name), format('apps/{0}/**/*.scss', inputs.app_name)) }}
        restore-keys: |
          app-${{ inputs.app_name }}-${{ hashFiles('**/package-lock.json') }}-

    - name: Build app
      shell: bash
      if: steps.restore_build.outputs.cache-hit != 'true'
      run: |
        npm run ${{ inputs.app_name }}:build