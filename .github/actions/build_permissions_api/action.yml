name: 'Install dependencies and build the permissions API'

inputs:
  GITHUB_SSH_KEY:
    description: '...'
    required: false
  API_FOLDER:
    description: '...'
    required: false
    default: "permissions_api"

runs:
  using: 'composite'
  steps:
    - uses: actions/checkout@v3
      with:
        repository: charmverse/permissions.charmverse.io
        ref: devops/use-ts
        path: ${{inputs.API_FOLDER}}
        ssh-key: ${{ inputs.GITHUB_SSH_KEY }}


    - name: Check directory
      shell: bash
      run: ls -a && pwd
      working-directory: ./${{inputs.API_FOLDER}}

    - name: Cache dependencies
      id: cache_permissions_node_modules
      uses: actions/cache@v3
      with:
        path: ./${{inputs.API_FOLDER}}/node_modules
        key: nodemodules-permissions-cache-${{ hashFiles('package-lock.json') }}-${{ hashFiles('patches/**.patch', 'prisma/schema.prisma') }}

    - name: Install npm dependencies
      shell: bash
      if: steps.cache_permissions_node_modules.outputs.cache-hit != 'true'
      run: echo -e "Install path" && pwd && npm ci --no-audit --no-fund
      working-directory: ./${{inputs.API_FOLDER}}

    - name: Install CharmVerse core
      shell: bash
      run: npm install github:charmverse/common#feat/forum-parity
      working-directory: ./${{inputs.API_FOLDER}}

    #### ---- Start the build process
    - run: echo '${{ env.GIT_DIFF }}'
      shell: bash
      working-directory: ./${{inputs.API_FOLDER}}

    - name: Cache build
      id: cache_permissions_build
      uses: actions/cache@v3
      with:
        path: |
          ./${{inputs.API_FOLDER}}/dist
          .env.test.local
        
        # including the app_env helps make sure that deploy_staging.yml does not reuse values from test_and_deploy.yml which are meant for production
        key: permissions-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx', '**/*.scss', '!node_modules', '!.next', '!dont_cache') }}-${{ inputs.NEXT_PUBLIC_APP_ENV }}

    - name: Build
      shell: bash
      if: steps.cache_permissions_build.outputs.cache-hit != 'true'
      run: npm run build:prod
      working-directory: ./${{inputs.API_FOLDER}}
      env:
        NEXT_PUBLIC_APP_ENV: ${{ inputs.NEXT_PUBLIC_APP_ENV }}

    # - name: Exit permissions api
    #   shell: bash
    #   run: cd ./permissions_api

