name: 'Build application'

runs:
  using: 'composite'
  with:
    NEXT_PUBLIC_DD_CLIENT_TOKEN: ${{ secrets.NEXT_PUBLIC_DD_CLIENT_TOKEN }}
    NEXT_PUBLIC_DD_RUM_CLIENT_TOKEN: ${{ secrets.NEXT_PUBLIC_DD_RUM_CLIENT_TOKEN }}
    NEXT_PUBLIC_DD_RUM_APP_ID: ${{ secrets.NEXT_PUBLIC_DD_RUM_APP_ID }}
    NEXT_PUBLIC_TELEGRAM_BOT_ID: ${{ secrets.NEXT_PUBLIC_TELEGRAM_BOT_ID }}
    # NEXT_PUBLIC_DISCORD_WEBHOOK_ERRORS: ${{ secrets.NEXT_PUBLIC_DISCORD_WEBHOOK_ERRORS }} comment for now
    NEXT_PUBLIC_WEBSOCKETS_HOST: https://sockets.charmverse.io
    NEXT_PUBLIC_UNSTOPPABLE_DOMAINS_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_UNSTOPPABLE_DOMAINS_CLIENT_ID }}
  steps:
    # - name: Show GitHub context
    #   shell: bash
    #   env:
    #     GITHUB_CONTEXT: ${{ toJson(github) }}
    #   run: echo "$GITHUB_CONTEXT"

    - name: Cache build
      id: cache_build
      uses: actions/cache@v3
      with:
        path: .next
        key: nextjs-build-${{ github.sha }}

    # Re-build prisma types which are cached inside of node_modules
    - name: Re-build Prisma types
      shell: bash
      run: npm run build:prisma

    - name: Build
      shell: bash
      if: steps.cache_build.outputs.cache-hit != 'true'
      env:
        NEXT_PUBLIC_DD_CLIENT_TOKEN: $NEXT_PUBLIC_DD_CLIENT_TOKEN
        NEXT_PUBLIC_DD_RUM_CLIENT_TOKEN: $NEXT_PUBLIC_DD_RUM_CLIENT_TOKEN
        NEXT_PUBLIC_DD_RUM_APP_ID: $NEXT_PUBLIC_DD_RUM_APP_ID
        NEXT_PUBLIC_TELEGRAM_BOT_ID: $NEXT_PUBLIC_TELEGRAM_BOT_ID
        # NEXT_PUBLIC_DISCORD_WEBHOOK_ERRORS: ${{ secrets.NEXT_PUBLIC_DISCORD_WEBHOOK_ERRORS }} comment for now
        NEXT_PUBLIC_WEBSOCKETS_HOST: https://sockets.charmverse.io
        NEXT_PUBLIC_UNSTOPPABLE_DOMAINS_CLIENT_ID: $NEXT_PUBLIC_UNSTOPPABLE_DOMAINS_CLIENT_ID
      run: npm run build
      
