name: "Build application"

inputs:
  REACT_APP_APP_ENV:
    description: "..."
    required: false

runs:
  using: "composite"
  steps:
    # - name: Show GitHub context
    #   shell: bash
    #   env:
    #     GITHUB_CONTEXT: ${{ toJson(github) }}
    #   run: echo "$GITHUB_CONTEXT"

    - name: Calculate cache key
      id: calc_cache_key
      shell: bash
      run: |
        echo "build_cache_key=nextjs-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx', '**/*.scss', '!node_modules', '!.next', '!dont_cache') }}" >> $GITHUB_OUTPUT

    - name: Cache check
      id: cache_check
      uses: actions/cache/restore@v3
      with:
        lookup-only: true
        path: |
          .next
          .env.test.local
          dist
        # including the app_env helps make sure that deploy_staging.yml does not reuse values from test_and_deploy.yml which are meant for production
        key: ${{ steps.calc_cache_key.outputs.build_cache_key }}-${{ inputs.NEXT_PUBLIC_APP_ENV }}
        restore-keys: |
          ${{ steps.calc_cache_key.outputs.build_cache_key }}-test
          ${{ steps.calc_cache_key.outputs.build_cache_key }}-
          nextjs-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}-

    - name: Print results of cache_check
      shell: bash
      run: |
        echo "cache-hit: ${{ steps.cache_check.outputs.cache-hit }}"
        echo "cache-primary-key: ${{ steps.cache_check.outputs.cache-primary-key }}"
        echo "cache-matched-key: ${{ steps.cache_check.outputs.cache-matched-key }}"

    - name: Cache build
      id: cache_build
      uses: actions/cache@v3
      with:
        path: |
          .next
          .env.test.local
          dist
        # including the app_env helps make sure that deploy_staging.yml does not reuse values from test_and_deploy.yml which are meant for production
        key: nextjs-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx', '**/*.scss', '!node_modules', '!.next', '!dont_cache') }}

    - name: Build
      shell: bash
      if: steps.cache_build.outputs.cache-hit != 'true'
      run: npm run build
