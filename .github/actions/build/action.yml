name: "Build application"

inputs:
  REACT_APP_APP_ENV:
    description: "..."
    required: false
  save_cache:
    description: "Whether to save the cache"
    required: false

runs:
  using: "composite"
  steps:
    # - name: Show GitHub context
    #   shell: bash
    #   env:
    #     GITHUB_CONTEXT: ${{ toJson(github) }}
    #   run: echo "$GITHUB_CONTEXT"

    - name: Restore build
      id: restore_build
      uses: actions/cache/restore@v3
      with:
        path: |
          .next
          .env.test.local
          dist
          background/ceramicServer/generated
        # including the app_env helps make sure that deploy_staging.yml does not reuse values from test_and_deploy.yml which are meant for production
        key: nextjs-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx', '**/*.gql', '**/*.scss', '!node_modules', '!.next', '!dist', '!dont_cache') }}

    - name: Build
      shell: bash
      if: steps.restore_build.outputs.cache-hit != 'true'
      run: npm run build

    # building cache key takes almost a minute, so we only run this if we are saving the cache
    - name: Cache build
      if: inputs.save_cache
      uses: actions/cache/save@v3
      with:
        path: |
          .next
          .env.test.local
          dist
          background/ceramicServer/generated
        # including the app_env helps make sure that deploy_staging.yml does not reuse values from test_and_deploy.yml which are meant for production
        key: nextjs-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx', '**/*.gql', '**/*.scss', '!node_modules', '!.next', '!dist', '!dont_cache') }}
