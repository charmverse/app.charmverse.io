name: 'Clean up staging'

on:
  pull_request:
    types: [unlabeled, closed]

concurrency:
  group: staging-${{ github.ref }}

jobs:
  clean-up:
    if: |
      (github.event.action == 'unlabeled' && github.event.label.name == ':rocket: deploy') ||
      (github.event.action == 'closed' && contains(github.event.pull_request.labels.*.name, ':rocket: deploy'))
    runs-on: ubuntu-latest
    # wait until all deploys are complete to destroy the env
    concurrency: deploy-pr-app-${{ github.head_ref }}
    steps:
      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: inject slug/short variables
        uses: rlespinasse/github-slug-action@v4.x

      - name: set STAGE variable in environment for next steps
        run: echo "STAGE=pr-${{ github.event.number }}-${{ env.GITHUB_HEAD_REF_SLUG }}" >> $GITHUB_ENV

      - name: checkout the files
        uses: actions/checkout@v4

      - name: Install dependencies
        uses: ./.github/actions/install

      - name: destroy the stack on AWS
        # we need to create a dummy zip file or else cdk throws an error it cannot find the asset
        run: |
          touch deploy.zip
          npm install aws-cdk-lib --no-audit --no-fund
          npm run destroy:staging

      - name: delete the github deployments and the corresponding environment
        uses: strumwolf/delete-deployment-environment@v1.1.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: ${{ env.STAGE }}
