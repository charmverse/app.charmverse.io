# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
      - name: Cache Next.js build # copied from https://github.com/vercel/next.js/blob/canary/errors/no-cache.md
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Install npm dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci --no-audit --no-fund
      - name: Lint
        run: npm run lint:prod
      - name: Build Next.js App
        run: npm run build
      - name: Add Datadog API Key
        run: sed -i 's/{API_KEY}/${{ secrets.DATADOG_API_KEY }}/g' .ebextensions/99_datadog.config
    # - name: Run Tests
    #   shell: 'script -q -e -c "bash {0}"' # add support for colors in output. see: https://github.com/actions/runner/issues/241
    #   run: npm test

  deploy:
    name: Deploy to production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: test
    steps:
      - uses: actions/checkout@v2
      - name: Install Node.js v16
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Install dependencies
        run: npm ci --no-fund
      - name: Build
        run: npm run build
      - name: Remove dev dependencies
        run: |
          npm prune --production
          rm -rf .git

      - name: Add Datadog API Key
        run: sed -i 's/{API_KEY}/${{ secrets.DATADOG_API_KEY }}/g' .ebextensions/99_datadog.config

      - name: Package
        run: zip deploy.zip -r .

      - name: Deploy to Beanstalk
        uses: einaregilsson/beanstalk-deploy@v18
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: web3-workspace
          environment_name: web3-workspace-production
          version_label: ${{ github.sha }}
          region: us-east-1
          deployment_package: deploy.zip
          use_existing_version_if_available: true # allows triggering re-deploys with same version
          wait_for_deployment: false # set to false to save sweet Github minutes
